<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dianwoda.test.bassy.db.dao.AutoTestSuiteMapper">
  <resultMap id="BaseResultMap" type="com.dianwoda.test.bassy.db.entity.AutoTestSuite">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="creat_tm" jdbcType="TIMESTAMP" property="creatTm" />
    <result column="modify_tm" jdbcType="TIMESTAMP" property="modifyTm" />
    <result column="creater" jdbcType="VARCHAR" property="creater" />
    <result column="modifier" jdbcType="VARCHAR" property="modifier" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dianwoda.test.bassy.db.entity.AutoTestSuite">
    <result column="suite" jdbcType="LONGVARCHAR" property="suite" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `type`, `name`, `status`, creat_tm, modify_tm, creater, modifier
  </sql>
  <sql id="Blob_Column_List">
    suite
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.dianwoda.test.bassy.db.entity.AutoTestSuiteExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from auto_test_suite
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.dianwoda.test.bassy.db.entity.AutoTestSuiteExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from auto_test_suite
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from auto_test_suite
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auto_test_suite
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dianwoda.test.bassy.db.entity.AutoTestSuiteExample">
    delete from auto_test_suite
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dianwoda.test.bassy.db.entity.AutoTestSuite">
    insert into auto_test_suite (id, `type`, `name`, 
      `status`, creat_tm, modify_tm, 
      creater, modifier, suite
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{creatTm,jdbcType=TIMESTAMP}, #{modifyTm,jdbcType=TIMESTAMP}, 
      #{creater,jdbcType=VARCHAR}, #{modifier,jdbcType=VARCHAR}, #{suite,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dianwoda.test.bassy.db.entity.AutoTestSuite">
    insert into auto_test_suite
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="creatTm != null">
        creat_tm,
      </if>
      <if test="modifyTm != null">
        modify_tm,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="suite != null">
        suite,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="creatTm != null">
        #{creatTm,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTm != null">
        #{modifyTm,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="suite != null">
        #{suite,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dianwoda.test.bassy.db.entity.AutoTestSuiteExample" resultType="java.lang.Long">
    select count(*) from auto_test_suite
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update auto_test_suite
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.creatTm != null">
        creat_tm = #{record.creatTm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTm != null">
        modify_tm = #{record.modifyTm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creater != null">
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.modifier != null">
        modifier = #{record.modifier,jdbcType=VARCHAR},
      </if>
      <if test="record.suite != null">
        suite = #{record.suite,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update auto_test_suite
    set id = #{record.id,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER},
      creat_tm = #{record.creatTm,jdbcType=TIMESTAMP},
      modify_tm = #{record.modifyTm,jdbcType=TIMESTAMP},
      creater = #{record.creater,jdbcType=VARCHAR},
      modifier = #{record.modifier,jdbcType=VARCHAR},
      suite = #{record.suite,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update auto_test_suite
    set id = #{record.id,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER},
      creat_tm = #{record.creatTm,jdbcType=TIMESTAMP},
      modify_tm = #{record.modifyTm,jdbcType=TIMESTAMP},
      creater = #{record.creater,jdbcType=VARCHAR},
      modifier = #{record.modifier,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dianwoda.test.bassy.db.entity.AutoTestSuite">
    update auto_test_suite
    <set>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="creatTm != null">
        creat_tm = #{creatTm,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTm != null">
        modify_tm = #{modifyTm,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="suite != null">
        suite = #{suite,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dianwoda.test.bassy.db.entity.AutoTestSuite">
    update auto_test_suite
    set `type` = #{type,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      creat_tm = #{creatTm,jdbcType=TIMESTAMP},
      modify_tm = #{modifyTm,jdbcType=TIMESTAMP},
      creater = #{creater,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=VARCHAR},
      suite = #{suite,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dianwoda.test.bassy.db.entity.AutoTestSuite">
    update auto_test_suite
    set `type` = #{type,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      creat_tm = #{creatTm,jdbcType=TIMESTAMP},
      modify_tm = #{modifyTm,jdbcType=TIMESTAMP},
      creater = #{creater,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>