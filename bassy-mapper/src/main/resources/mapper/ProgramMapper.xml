<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dianwoda.test.bassy.db.dao.ProgramMapper">
  <resultMap id="BaseResultMap" type="com.dianwoda.test.bassy.db.entity.Program">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="program_name" jdbcType="VARCHAR" property="programName" />
    <result column="program_type" jdbcType="VARCHAR" property="programType" />
    <result column="program_module" jdbcType="INTEGER" property="programModule" />
    <result column="process_module" jdbcType="INTEGER" property="processModule" />
    <result column="persons" jdbcType="VARCHAR" property="persons" />
    <result column="core_nodes" jdbcType="VARCHAR" property="coreNodes" />
    <result column="requires" jdbcType="VARCHAR" property="requires" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="work_id" jdbcType="VARCHAR" property="workId" />
    <result column="pressing_reason" jdbcType="VARCHAR" property="pressingReason" />
    <result column="is_check" jdbcType="VARCHAR" property="isCheck" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_tm" jdbcType="TIMESTAMP" property="createTm" />
    <result column="modify_tm" jdbcType="TIMESTAMP" property="modifyTm" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="modifier" jdbcType="VARCHAR" property="modifier" />
    <result column="inner_project_type" jdbcType="VARCHAR" property="innerProjectType" />
    <result column="each_task_work_hour" jdbcType="REAL" property="eachTaskWorkHour" />
    <result column="daily_task_num" jdbcType="INTEGER" property="dailyTaskNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, program_name, program_type, program_module, process_module, persons, core_nodes, 
    requires, remark, work_id, pressing_reason, is_check, start_time, end_time, `status`, 
    create_tm, modify_tm, creator, modifier, inner_project_type, each_task_work_hour, 
    daily_task_num
  </sql>
  <select id="selectByExample" parameterType="com.dianwoda.test.bassy.db.entity.ProgramExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from program
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from program
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from program
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dianwoda.test.bassy.db.entity.ProgramExample">
    delete from program
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dianwoda.test.bassy.db.entity.Program" keyProperty="id">
    insert into program (id, program_name, program_type, 
      program_module, process_module, persons, 
      core_nodes, requires, remark, 
      work_id, pressing_reason, is_check, 
      start_time, end_time, `status`, 
      create_tm, modify_tm, creator, 
      modifier, inner_project_type, each_task_work_hour, 
      daily_task_num)
    values (#{id,jdbcType=INTEGER}, #{programName,jdbcType=VARCHAR}, #{programType,jdbcType=VARCHAR}, 
      #{programModule,jdbcType=INTEGER}, #{processModule,jdbcType=INTEGER}, #{persons,jdbcType=VARCHAR}, 
      #{coreNodes,jdbcType=VARCHAR}, #{requires,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{workId,jdbcType=VARCHAR}, #{pressingReason,jdbcType=VARCHAR}, #{isCheck,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{createTm,jdbcType=TIMESTAMP}, #{modifyTm,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, 
      #{modifier,jdbcType=VARCHAR}, #{innerProjectType,jdbcType=VARCHAR}, #{eachTaskWorkHour,jdbcType=REAL}, 
      #{dailyTaskNum,jdbcType=INTEGER})
    <selectKey resultType="Integer" order="AFTER" keyProperty="id">
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.dianwoda.test.bassy.db.entity.Program">
    insert into program
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="programName != null">
        program_name,
      </if>
      <if test="programType != null">
        program_type,
      </if>
      <if test="programModule != null">
        program_module,
      </if>
      <if test="processModule != null">
        process_module,
      </if>
      <if test="persons != null">
        persons,
      </if>
      <if test="coreNodes != null">
        core_nodes,
      </if>
      <if test="requires != null">
        requires,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="workId != null">
        work_id,
      </if>
      <if test="pressingReason != null">
        pressing_reason,
      </if>
      <if test="isCheck != null">
        is_check,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTm != null">
        create_tm,
      </if>
      <if test="modifyTm != null">
        modify_tm,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="innerProjectType != null">
        inner_project_type,
      </if>
      <if test="eachTaskWorkHour != null">
        each_task_work_hour,
      </if>
      <if test="dailyTaskNum != null">
        daily_task_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="programName != null">
        #{programName,jdbcType=VARCHAR},
      </if>
      <if test="programType != null">
        #{programType,jdbcType=VARCHAR},
      </if>
      <if test="programModule != null">
        #{programModule,jdbcType=INTEGER},
      </if>
      <if test="processModule != null">
        #{processModule,jdbcType=INTEGER},
      </if>
      <if test="persons != null">
        #{persons,jdbcType=VARCHAR},
      </if>
      <if test="coreNodes != null">
        #{coreNodes,jdbcType=VARCHAR},
      </if>
      <if test="requires != null">
        #{requires,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="workId != null">
        #{workId,jdbcType=VARCHAR},
      </if>
      <if test="pressingReason != null">
        #{pressingReason,jdbcType=VARCHAR},
      </if>
      <if test="isCheck != null">
        #{isCheck,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTm != null">
        #{createTm,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTm != null">
        #{modifyTm,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="innerProjectType != null">
        #{innerProjectType,jdbcType=VARCHAR},
      </if>
      <if test="eachTaskWorkHour != null">
        #{eachTaskWorkHour,jdbcType=REAL},
      </if>
      <if test="dailyTaskNum != null">
        #{dailyTaskNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dianwoda.test.bassy.db.entity.ProgramExample" resultType="java.lang.Long">
    select count(*) from program
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update program
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.programName != null">
        program_name = #{record.programName,jdbcType=VARCHAR},
      </if>
      <if test="record.programType != null">
        program_type = #{record.programType,jdbcType=VARCHAR},
      </if>
      <if test="record.programModule != null">
        program_module = #{record.programModule,jdbcType=INTEGER},
      </if>
      <if test="record.processModule != null">
        process_module = #{record.processModule,jdbcType=INTEGER},
      </if>
      <if test="record.persons != null">
        persons = #{record.persons,jdbcType=VARCHAR},
      </if>
      <if test="record.coreNodes != null">
        core_nodes = #{record.coreNodes,jdbcType=VARCHAR},
      </if>
      <if test="record.requires != null">
        requires = #{record.requires,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.workId != null">
        work_id = #{record.workId,jdbcType=VARCHAR},
      </if>
      <if test="record.pressingReason != null">
        pressing_reason = #{record.pressingReason,jdbcType=VARCHAR},
      </if>
      <if test="record.isCheck != null">
        is_check = #{record.isCheck,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createTm != null">
        create_tm = #{record.createTm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTm != null">
        modify_tm = #{record.modifyTm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.modifier != null">
        modifier = #{record.modifier,jdbcType=VARCHAR},
      </if>
      <if test="record.innerProjectType != null">
        inner_project_type = #{record.innerProjectType,jdbcType=VARCHAR},
      </if>
      <if test="record.eachTaskWorkHour != null">
        each_task_work_hour = #{record.eachTaskWorkHour,jdbcType=REAL},
      </if>
      <if test="record.dailyTaskNum != null">
        daily_task_num = #{record.dailyTaskNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update program
    set id = #{record.id,jdbcType=INTEGER},
      program_name = #{record.programName,jdbcType=VARCHAR},
      program_type = #{record.programType,jdbcType=VARCHAR},
      program_module = #{record.programModule,jdbcType=INTEGER},
      process_module = #{record.processModule,jdbcType=INTEGER},
      persons = #{record.persons,jdbcType=VARCHAR},
      core_nodes = #{record.coreNodes,jdbcType=VARCHAR},
      requires = #{record.requires,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      work_id = #{record.workId,jdbcType=VARCHAR},
      pressing_reason = #{record.pressingReason,jdbcType=VARCHAR},
      is_check = #{record.isCheck,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      `status` = #{record.status,jdbcType=VARCHAR},
      create_tm = #{record.createTm,jdbcType=TIMESTAMP},
      modify_tm = #{record.modifyTm,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR},
      modifier = #{record.modifier,jdbcType=VARCHAR},
      inner_project_type = #{record.innerProjectType,jdbcType=VARCHAR},
      each_task_work_hour = #{record.eachTaskWorkHour,jdbcType=REAL},
      daily_task_num = #{record.dailyTaskNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dianwoda.test.bassy.db.entity.Program">
    update program
    <set>
      <if test="programName != null">
        program_name = #{programName,jdbcType=VARCHAR},
      </if>
      <if test="programType != null">
        program_type = #{programType,jdbcType=VARCHAR},
      </if>
      <if test="programModule != null">
        program_module = #{programModule,jdbcType=INTEGER},
      </if>
      <if test="processModule != null">
        process_module = #{processModule,jdbcType=INTEGER},
      </if>
      <if test="persons != null">
        persons = #{persons,jdbcType=VARCHAR},
      </if>
      <if test="coreNodes != null">
        core_nodes = #{coreNodes,jdbcType=VARCHAR},
      </if>
      <if test="requires != null">
        requires = #{requires,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="workId != null">
        work_id = #{workId,jdbcType=VARCHAR},
      </if>
      <if test="pressingReason != null">
        pressing_reason = #{pressingReason,jdbcType=VARCHAR},
      </if>
      <if test="isCheck != null">
        is_check = #{isCheck,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTm != null">
        create_tm = #{createTm,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTm != null">
        modify_tm = #{modifyTm,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="innerProjectType != null">
        inner_project_type = #{innerProjectType,jdbcType=VARCHAR},
      </if>
      <if test="eachTaskWorkHour != null">
        each_task_work_hour = #{eachTaskWorkHour,jdbcType=REAL},
      </if>
      <if test="dailyTaskNum != null">
        daily_task_num = #{dailyTaskNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dianwoda.test.bassy.db.entity.Program">
    update program
    set program_name = #{programName,jdbcType=VARCHAR},
      program_type = #{programType,jdbcType=VARCHAR},
      program_module = #{programModule,jdbcType=INTEGER},
      process_module = #{processModule,jdbcType=INTEGER},
      persons = #{persons,jdbcType=VARCHAR},
      core_nodes = #{coreNodes,jdbcType=VARCHAR},
      requires = #{requires,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      work_id = #{workId,jdbcType=VARCHAR},
      pressing_reason = #{pressingReason,jdbcType=VARCHAR},
      is_check = #{isCheck,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=VARCHAR},
      create_tm = #{createTm,jdbcType=TIMESTAMP},
      modify_tm = #{modifyTm,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=VARCHAR},
      inner_project_type = #{innerProjectType,jdbcType=VARCHAR},
      each_task_work_hour = #{eachTaskWorkHour,jdbcType=REAL},
      daily_task_num = #{dailyTaskNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>