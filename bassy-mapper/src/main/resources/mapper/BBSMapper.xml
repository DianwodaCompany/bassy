<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dianwoda.test.bassy.db.dao.BBSMapper">
  <resultMap id="BaseResultMap" type="com.dianwoda.test.bassy.db.entity.BBS">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="author_code" jdbcType="VARCHAR" property="authorCode" />
    <result column="author_name" jdbcType="VARCHAR" property="authorName" />
    <result column="create_tm" jdbcType="TIMESTAMP" property="createTm" />
    <result column="modify_tm" jdbcType="TIMESTAMP" property="modifyTm" />
    <result column="like" jdbcType="SMALLINT" property="like" />
    <result column="origin" jdbcType="TINYINT" property="origin" />
    <result column="files" jdbcType="VARCHAR" property="files" />
    <result column="week" jdbcType="VARCHAR" property="week" />
    <result column="note_type" jdbcType="TINYINT" property="noteType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dianwoda.test.bassy.db.entity.BBS">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `type`, title, author_code, author_name, create_tm, modify_tm, `like`, origin, 
    files, week, note_type
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.dianwoda.test.bassy.db.entity.BBSExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bbs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.dianwoda.test.bassy.db.entity.BBSExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bbs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bbs
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bbs
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dianwoda.test.bassy.db.entity.BBSExample">
    delete from bbs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dianwoda.test.bassy.db.entity.BBS">
    insert into bbs (id, `type`, title, 
      author_code, author_name, create_tm, 
      modify_tm, `like`, origin, 
      files, week, note_type, 
      content)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{title,jdbcType=VARCHAR}, 
      #{authorCode,jdbcType=VARCHAR}, #{authorName,jdbcType=VARCHAR}, #{createTm,jdbcType=TIMESTAMP}, 
      #{modifyTm,jdbcType=TIMESTAMP}, #{like,jdbcType=SMALLINT}, #{origin,jdbcType=TINYINT}, 
      #{files,jdbcType=VARCHAR}, #{week,jdbcType=VARCHAR}, #{noteType,jdbcType=TINYINT}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dianwoda.test.bassy.db.entity.BBS">
    insert into bbs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="authorCode != null">
        author_code,
      </if>
      <if test="authorName != null">
        author_name,
      </if>
      <if test="createTm != null">
        create_tm,
      </if>
      <if test="modifyTm != null">
        modify_tm,
      </if>
      <if test="like != null">
        `like`,
      </if>
      <if test="origin != null">
        origin,
      </if>
      <if test="files != null">
        files,
      </if>
      <if test="week != null">
        week,
      </if>
      <if test="noteType != null">
        note_type,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="authorCode != null">
        #{authorCode,jdbcType=VARCHAR},
      </if>
      <if test="authorName != null">
        #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="createTm != null">
        #{createTm,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTm != null">
        #{modifyTm,jdbcType=TIMESTAMP},
      </if>
      <if test="like != null">
        #{like,jdbcType=SMALLINT},
      </if>
      <if test="origin != null">
        #{origin,jdbcType=TINYINT},
      </if>
      <if test="files != null">
        #{files,jdbcType=VARCHAR},
      </if>
      <if test="week != null">
        #{week,jdbcType=VARCHAR},
      </if>
      <if test="noteType != null">
        #{noteType,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
      <selectKey resultType="Integer" order="AFTER" keyProperty="id">
          SELECT LAST_INSERT_ID() AS id
      </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.dianwoda.test.bassy.db.entity.BBSExample" resultType="java.lang.Long">
    select count(*) from bbs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bbs
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.authorCode != null">
        author_code = #{record.authorCode,jdbcType=VARCHAR},
      </if>
      <if test="record.authorName != null">
        author_name = #{record.authorName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTm != null">
        create_tm = #{record.createTm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTm != null">
        modify_tm = #{record.modifyTm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.like != null">
        `like` = #{record.like,jdbcType=SMALLINT},
      </if>
      <if test="record.origin != null">
        origin = #{record.origin,jdbcType=TINYINT},
      </if>
      <if test="record.files != null">
        files = #{record.files,jdbcType=VARCHAR},
      </if>
      <if test="record.week != null">
        week = #{record.week,jdbcType=VARCHAR},
      </if>
      <if test="record.noteType != null">
        note_type = #{record.noteType,jdbcType=TINYINT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update bbs
    set id = #{record.id,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=TINYINT},
      title = #{record.title,jdbcType=VARCHAR},
      author_code = #{record.authorCode,jdbcType=VARCHAR},
      author_name = #{record.authorName,jdbcType=VARCHAR},
      create_tm = #{record.createTm,jdbcType=TIMESTAMP},
      modify_tm = #{record.modifyTm,jdbcType=TIMESTAMP},
      `like` = #{record.like,jdbcType=SMALLINT},
      origin = #{record.origin,jdbcType=TINYINT},
      files = #{record.files,jdbcType=VARCHAR},
      week = #{record.week,jdbcType=VARCHAR},
      note_type = #{record.noteType,jdbcType=TINYINT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bbs
    set id = #{record.id,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=TINYINT},
      title = #{record.title,jdbcType=VARCHAR},
      author_code = #{record.authorCode,jdbcType=VARCHAR},
      author_name = #{record.authorName,jdbcType=VARCHAR},
      create_tm = #{record.createTm,jdbcType=TIMESTAMP},
      modify_tm = #{record.modifyTm,jdbcType=TIMESTAMP},
      `like` = #{record.like,jdbcType=SMALLINT},
      origin = #{record.origin,jdbcType=TINYINT},
      files = #{record.files,jdbcType=VARCHAR},
      week = #{record.week,jdbcType=VARCHAR},
      note_type = #{record.noteType,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dianwoda.test.bassy.db.entity.BBS">
    update bbs
    <set>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="authorCode != null">
        author_code = #{authorCode,jdbcType=VARCHAR},
      </if>
      <if test="authorName != null">
        author_name = #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="createTm != null">
        create_tm = #{createTm,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTm != null">
        modify_tm = #{modifyTm,jdbcType=TIMESTAMP},
      </if>
      <if test="like != null">
        `like` = #{like,jdbcType=SMALLINT},
      </if>
      <if test="origin != null">
        origin = #{origin,jdbcType=TINYINT},
      </if>
      <if test="files != null">
        files = #{files,jdbcType=VARCHAR},
      </if>
      <if test="week != null">
        week = #{week,jdbcType=VARCHAR},
      </if>
      <if test="noteType != null">
        note_type = #{noteType,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dianwoda.test.bassy.db.entity.BBS">
    update bbs
    set `type` = #{type,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR},
      author_code = #{authorCode,jdbcType=VARCHAR},
      author_name = #{authorName,jdbcType=VARCHAR},
      create_tm = #{createTm,jdbcType=TIMESTAMP},
      modify_tm = #{modifyTm,jdbcType=TIMESTAMP},
      `like` = #{like,jdbcType=SMALLINT},
      origin = #{origin,jdbcType=TINYINT},
      files = #{files,jdbcType=VARCHAR},
      week = #{week,jdbcType=VARCHAR},
      note_type = #{noteType,jdbcType=TINYINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dianwoda.test.bassy.db.entity.BBS">
    update bbs
    set `type` = #{type,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR},
      author_code = #{authorCode,jdbcType=VARCHAR},
      author_name = #{authorName,jdbcType=VARCHAR},
      create_tm = #{createTm,jdbcType=TIMESTAMP},
      modify_tm = #{modifyTm,jdbcType=TIMESTAMP},
      `like` = #{like,jdbcType=SMALLINT},
      origin = #{origin,jdbcType=TINYINT},
      files = #{files,jdbcType=VARCHAR},
      week = #{week,jdbcType=VARCHAR},
      note_type = #{noteType,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>