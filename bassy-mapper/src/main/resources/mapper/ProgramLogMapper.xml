<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dianwoda.test.bassy.db.dao.ProgramLogMapper">
  <resultMap id="BaseResultMap" type="com.dianwoda.test.bassy.db.entity.ProgramLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="program_id" jdbcType="INTEGER" property="programId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="percent" jdbcType="INTEGER" property="percent" />
    <result column="program_explain" jdbcType="VARCHAR" property="programExplain" />
    <result column="log_type" jdbcType="INTEGER" property="logType" />
    <result column="bug_info" jdbcType="VARCHAR" property="bugInfo" />
    <result column="task_info" jdbcType="VARCHAR" property="taskInfo" />
    <result column="is_normal" jdbcType="TINYINT" property="isNormal" />
    <result column="reason_team" jdbcType="VARCHAR" property="reasonTeam" />
    <result column="reason_type" jdbcType="VARCHAR" property="reasonType" />
    <result column="reason_level" jdbcType="VARCHAR" property="reasonLevel" />
    <result column="reason_detail" jdbcType="VARCHAR" property="reasonDetail" />
    <result column="modifier" jdbcType="VARCHAR" property="modifier" />
    <result column="modify_tm" jdbcType="TIMESTAMP" property="modifyTm" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, program_id, status, percent, program_explain, log_type, bug_info, task_info, 
    is_normal, reason_team, reason_type, reason_level, reason_detail, modifier, modify_tm
  </sql>
  <select id="selectByExample" parameterType="com.dianwoda.test.bassy.db.entity.ProgramLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from program_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from program_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from program_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dianwoda.test.bassy.db.entity.ProgramLogExample">
    delete from program_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dianwoda.test.bassy.db.entity.ProgramLog">
    insert into program_log (id, program_id, status, 
      percent, program_explain, log_type, 
      bug_info, task_info, is_normal, 
      reason_team, reason_type, reason_level, 
      reason_detail, modifier, modify_tm
      )
    values (#{id,jdbcType=INTEGER}, #{programId,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, 
      #{percent,jdbcType=INTEGER}, #{programExplain,jdbcType=VARCHAR}, #{logType,jdbcType=INTEGER}, 
      #{bugInfo,jdbcType=VARCHAR}, #{taskInfo,jdbcType=VARCHAR}, #{isNormal,jdbcType=TINYINT}, 
      #{reasonTeam,jdbcType=VARCHAR}, #{reasonType,jdbcType=VARCHAR}, #{reasonLevel,jdbcType=VARCHAR}, 
      #{reasonDetail,jdbcType=VARCHAR}, #{modifier,jdbcType=VARCHAR}, #{modifyTm,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dianwoda.test.bassy.db.entity.ProgramLog">
    insert into program_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="programId != null">
        program_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="percent != null">
        percent,
      </if>
      <if test="programExplain != null">
        program_explain,
      </if>
      <if test="logType != null">
        log_type,
      </if>
      <if test="bugInfo != null">
        bug_info,
      </if>
      <if test="taskInfo != null">
        task_info,
      </if>
      <if test="isNormal != null">
        is_normal,
      </if>
      <if test="reasonTeam != null">
        reason_team,
      </if>
      <if test="reasonType != null">
        reason_type,
      </if>
      <if test="reasonLevel != null">
        reason_level,
      </if>
      <if test="reasonDetail != null">
        reason_detail,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="modifyTm != null">
        modify_tm,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="programId != null">
        #{programId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="percent != null">
        #{percent,jdbcType=INTEGER},
      </if>
      <if test="programExplain != null">
        #{programExplain,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=INTEGER},
      </if>
      <if test="bugInfo != null">
        #{bugInfo,jdbcType=VARCHAR},
      </if>
      <if test="taskInfo != null">
        #{taskInfo,jdbcType=VARCHAR},
      </if>
      <if test="isNormal != null">
        #{isNormal,jdbcType=TINYINT},
      </if>
      <if test="reasonTeam != null">
        #{reasonTeam,jdbcType=VARCHAR},
      </if>
      <if test="reasonType != null">
        #{reasonType,jdbcType=VARCHAR},
      </if>
      <if test="reasonLevel != null">
        #{reasonLevel,jdbcType=VARCHAR},
      </if>
      <if test="reasonDetail != null">
        #{reasonDetail,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifyTm != null">
        #{modifyTm,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into program_log (program_id, status,
    percent, program_explain, log_type,
    bug_info, task_info, is_normal,
    reason_team, reason_type, reason_level,
    reason_detail, modifier, modify_tm
    )
    values
    <foreach collection ="list" index= "index" separator ="," item="proLog">
      (
      #{proLog.programId,jdbcType=INTEGER}, #{proLog.status,jdbcType=VARCHAR},
      #{proLog.percent,jdbcType=INTEGER}, #{proLog.programExplain,jdbcType=VARCHAR}, #{proLog.logType,jdbcType=INTEGER},
      #{proLog.bugInfo,jdbcType=VARCHAR}, #{proLog.taskInfo,jdbcType=VARCHAR}, #{proLog.isNormal,jdbcType=TINYINT},
      #{proLog.reasonTeam,jdbcType=VARCHAR}, #{proLog.reasonType,jdbcType=VARCHAR}, #{proLog.reasonLevel,jdbcType=VARCHAR},
      #{proLog.reasonDetail,jdbcType=VARCHAR}, #{proLog.modifier,jdbcType=VARCHAR}, #{proLog.modifyTm,jdbcType=TIMESTAMP}
      )
    </foreach>
  </insert>
  <select id="countByExample" parameterType="com.dianwoda.test.bassy.db.entity.ProgramLogExample" resultType="java.lang.Long">
    select count(*) from program_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update program_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.programId != null">
        program_id = #{record.programId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.percent != null">
        percent = #{record.percent,jdbcType=INTEGER},
      </if>
      <if test="record.programExplain != null">
        program_explain = #{record.programExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.logType != null">
        log_type = #{record.logType,jdbcType=INTEGER},
      </if>
      <if test="record.bugInfo != null">
        bug_info = #{record.bugInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.taskInfo != null">
        task_info = #{record.taskInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.isNormal != null">
        is_normal = #{record.isNormal,jdbcType=TINYINT},
      </if>
      <if test="record.reasonTeam != null">
        reason_team = #{record.reasonTeam,jdbcType=VARCHAR},
      </if>
      <if test="record.reasonType != null">
        reason_type = #{record.reasonType,jdbcType=VARCHAR},
      </if>
      <if test="record.reasonLevel != null">
        reason_level = #{record.reasonLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.reasonDetail != null">
        reason_detail = #{record.reasonDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.modifier != null">
        modifier = #{record.modifier,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTm != null">
        modify_tm = #{record.modifyTm,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update program_log
    set id = #{record.id,jdbcType=INTEGER},
      program_id = #{record.programId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      percent = #{record.percent,jdbcType=INTEGER},
      program_explain = #{record.programExplain,jdbcType=VARCHAR},
      log_type = #{record.logType,jdbcType=INTEGER},
      bug_info = #{record.bugInfo,jdbcType=VARCHAR},
      task_info = #{record.taskInfo,jdbcType=VARCHAR},
      is_normal = #{record.isNormal,jdbcType=TINYINT},
      reason_team = #{record.reasonTeam,jdbcType=VARCHAR},
      reason_type = #{record.reasonType,jdbcType=VARCHAR},
      reason_level = #{record.reasonLevel,jdbcType=VARCHAR},
      reason_detail = #{record.reasonDetail,jdbcType=VARCHAR},
      modifier = #{record.modifier,jdbcType=VARCHAR},
      modify_tm = #{record.modifyTm,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dianwoda.test.bassy.db.entity.ProgramLog">
    update program_log
    <set>
      <if test="programId != null">
        program_id = #{programId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="percent != null">
        percent = #{percent,jdbcType=INTEGER},
      </if>
      <if test="programExplain != null">
        program_explain = #{programExplain,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        log_type = #{logType,jdbcType=INTEGER},
      </if>
      <if test="bugInfo != null">
        bug_info = #{bugInfo,jdbcType=VARCHAR},
      </if>
      <if test="taskInfo != null">
        task_info = #{taskInfo,jdbcType=VARCHAR},
      </if>
      <if test="isNormal != null">
        is_normal = #{isNormal,jdbcType=TINYINT},
      </if>
      <if test="reasonTeam != null">
        reason_team = #{reasonTeam,jdbcType=VARCHAR},
      </if>
      <if test="reasonType != null">
        reason_type = #{reasonType,jdbcType=VARCHAR},
      </if>
      <if test="reasonLevel != null">
        reason_level = #{reasonLevel,jdbcType=VARCHAR},
      </if>
      <if test="reasonDetail != null">
        reason_detail = #{reasonDetail,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifyTm != null">
        modify_tm = #{modifyTm,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dianwoda.test.bassy.db.entity.ProgramLog">
    update program_log
    set program_id = #{programId,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      percent = #{percent,jdbcType=INTEGER},
      program_explain = #{programExplain,jdbcType=VARCHAR},
      log_type = #{logType,jdbcType=INTEGER},
      bug_info = #{bugInfo,jdbcType=VARCHAR},
      task_info = #{taskInfo,jdbcType=VARCHAR},
      is_normal = #{isNormal,jdbcType=TINYINT},
      reason_team = #{reasonTeam,jdbcType=VARCHAR},
      reason_type = #{reasonType,jdbcType=VARCHAR},
      reason_level = #{reasonLevel,jdbcType=VARCHAR},
      reason_detail = #{reasonDetail,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=VARCHAR},
      modify_tm = #{modifyTm,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>